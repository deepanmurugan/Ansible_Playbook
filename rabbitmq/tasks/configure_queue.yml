- name: Configure queue and policy | Checking if rabbitmqadmin is installed
  stat:
    path: "{{ rmq_admin_dir }}" 
  register: rabbitmqadmin_check

- name: Configure queue and policy | Installing rabbitMQ admin
  get_url:
    url: "{{ rmq_admin_url }}" 
    dest: "{{ rmq_admin_dest }}"
    mode: u=rwx,g=rw,o=rw
  when: not rabbitmqadmin_check['stat']['exists']

- name: Configure queue and policy | Declare rabbitmq exchange(s)
  shell: rabbitmqadmin declare exchange name={{ item['exchange_name'] }} type={{ item['type'] }} --vhost={{ item['vhost'] | default('/') }}
  with_items: "{{ rabbitmq_config }}"
  when: >
        item['exchange_name'] is defined and
        cluster_machine == "master"

- name: Configure queue and policy | creating queue(s)
  shell: rabbitmqadmin declare queue name={{ item['queue_name'] }} durable={{ item['durable']|lower }} --vhost={{ item['vhost'] | default('/') }}
  with_items: "{{ rabbitmq_config }}"
  when: >
        item['queue_name'] is defined and
        cluster_machine == "master"

- name: Configure queue and policy | creating binding(s)
  shell: rabbitmqadmin declare binding source={{ item['exchange_name'] }} destination={{ item['queue_name'] }} routing_key={{ item['routing_key'] | default('') }} --vhost={{ item['vhost'] | default('/') }}
  with_items: "{{ rabbitmq_config }}"
  when: >
        item['exchange_name'] is defined and
        cluster_machine == "master"

- name: Configure queue and policy | setting up ha on queue(s)
  rabbitmq_policy:
    name: "{{ item['policy_name'] }}"
    pattern: "{{ item['policy_pattern'] }}"
    vhost: "{{ item['vhost'] | default('/') }}"
    tags: "{{ item['tags'] }}"
    apply_to: "{{ item['apply_to'] }}"
    state: present
  with_items: "{{ rabbitmq_config }}"
  when: > 
        item['policy_name'] is defined and
        cluster_machine == "master"
